package eagleplan;

import java.awt.Color;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.SQLException;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import net.proteanit.sql.DbUtils;

//* Used: mysql-connector-java-5.1.40-bin
public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();   
        tblSlotsCreate();
        tblPairingsCreate();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        tblSlots.setRowSelectionInterval(0, 0);
        
        
        //tblPairings.setRowSelectionInterval(0, 0);

        //table.changeSelection(0, 0, false, false);
        //tblSlots.setColumnModel(columnModel);
        //tblSlots.setModel(DbUtils.resultSetToTableModel(connect.rs));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlgSlotHistory = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        pmnuMain = new javax.swing.JPopupMenu();
        mnuShowHistory = new javax.swing.JMenuItem();
        lblAppTitle = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlSlots = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSlots = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblSlotID = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblCandidate1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblCandidate2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblTypeOfTraining = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblInstructor1 = new javax.swing.JLabel();
        tglSlotConfirmed = new javax.swing.JToggleButton();
        tglSlotCompleted = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        tglExpanded = new javax.swing.JToggleButton();
        pnlExpanded = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        pnlPairings = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPairings = new javax.swing.JTable();

        dlgSlotHistory.setAlwaysOnTop(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 653, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 416, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout dlgSlotHistoryLayout = new javax.swing.GroupLayout(dlgSlotHistory.getContentPane());
        dlgSlotHistory.getContentPane().setLayout(dlgSlotHistoryLayout);
        dlgSlotHistoryLayout.setHorizontalGroup(
            dlgSlotHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dlgSlotHistoryLayout.setVerticalGroup(
            dlgSlotHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        mnuShowHistory.setText("Show History");
        pmnuMain.add(mnuShowHistory);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EaglePlan");
        setPreferredSize(new java.awt.Dimension(1200, 800));
        setSize(new java.awt.Dimension(1200, 800));

        lblAppTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblAppTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAppTitle.setText("EaglePlan Version 1.1a");
        lblAppTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1152, 862));

        tblSlots.setAutoCreateRowSorter(true);
        tblSlots.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblSlots.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "test", "Title 3", "Title 4"
            }
        ));
        tblSlots.setRowHeight(30);
        tblSlots.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblSlots.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSlotsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSlots);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Details of Slot"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Slot ID:");
        jLabel1.setPreferredSize(new java.awt.Dimension(55, 22));

        lblSlotID.setBackground(new java.awt.Color(204, 255, 204));
        lblSlotID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblSlotID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlotID.setOpaque(true);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Candidate 1:");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblCandidate1.setBackground(new java.awt.Color(204, 255, 204));
        lblCandidate1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCandidate1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCandidate1.setOpaque(true);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Candidate 2:");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblCandidate2.setBackground(new java.awt.Color(204, 255, 204));
        lblCandidate2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCandidate2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCandidate2.setOpaque(true);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Type of Training:");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblTypeOfTraining.setBackground(new java.awt.Color(204, 255, 204));
        lblTypeOfTraining.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTypeOfTraining.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTypeOfTraining.setOpaque(true);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Instructor 1:");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblInstructor1.setBackground(new java.awt.Color(204, 255, 204));
        lblInstructor1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblInstructor1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInstructor1.setOpaque(true);

        tglSlotConfirmed.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tglSlotConfirmed.setText("Slot Confirmation");

        tglSlotCompleted.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tglSlotCompleted.setText("Slot Completed");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Date:");

        lblDate.setBackground(new java.awt.Color(204, 255, 204));
        lblDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDate.setToolTipText("");
        lblDate.setOpaque(true);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Time:");

        lblTime.setBackground(new java.awt.Color(204, 255, 204));
        lblTime.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime.setOpaque(true);

        tglExpanded.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tglExpanded.setText("...");
        tglExpanded.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tglExpandedPropertyChange(evt);
            }
        });

        pnlExpanded.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlExpandedLayout = new javax.swing.GroupLayout(pnlExpanded);
        pnlExpanded.setLayout(pnlExpandedLayout);
        pnlExpandedLayout.setHorizontalGroup(
            pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlExpandedLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(230, 230, 230))
        );
        pnlExpandedLayout.setVerticalGroup(
            pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlExpandedLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jButton1)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblDate, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(lblSlotID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCandidate2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCandidate1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblTypeOfTraining, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblInstructor1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(27, 27, 27)
                                .addComponent(tglSlotCompleted, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tglSlotConfirmed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tglExpanded)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlExpanded, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSlotID, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(lblTypeOfTraining, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCandidate1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5)
                            .addComponent(lblInstructor1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tglSlotConfirmed, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tglSlotCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCandidate2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tglExpanded, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlExpanded, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout pnlSlotsLayout = new javax.swing.GroupLayout(pnlSlots);
        pnlSlots.setLayout(pnlSlotsLayout);
        pnlSlotsLayout.setHorizontalGroup(
            pnlSlotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSlotsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSlotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1165, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlSlotsLayout.setVerticalGroup(
            pnlSlotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSlotsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Slots", pnlSlots);

        tblPairings.setAutoCreateRowSorter(true);
        tblPairings.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblPairings.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPairings.setRowHeight(30);
        jScrollPane2.setViewportView(tblPairings);

        javax.swing.GroupLayout pnlPairingsLayout = new javax.swing.GroupLayout(pnlPairings);
        pnlPairings.setLayout(pnlPairingsLayout);
        pnlPairingsLayout.setHorizontalGroup(
            pnlPairingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPairingsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1117, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlPairingsLayout.setVerticalGroup(
            pnlPairingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPairingsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(430, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pairings", pnlPairings);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblAppTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblAppTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblSlotsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSlotsMouseClicked

        try {
            String tblSlotsID = (this.tblSlots.getValueAt(this.tblSlots.getSelectedRow(), 0)).toString();
            String tblCandidate1 = (this.tblSlots.getValueAt(this.tblSlots.getSelectedRow(), 4)).toString();
            String tblCandidate2 = "None";
            if ((this.tblSlots.getValueAt(this.tblSlots.getSelectedRow(), 5)) != null) {
                tblCandidate2 = ((this.tblSlots.getValueAt(this.tblSlots.getSelectedRow(), 5)).toString());
            }
            String tblTypeOfTraining = (this.tblSlots.getValueAt(this.tblSlots.getSelectedRow(), 6)).toString();
            String tblInstructor1 = (this.tblSlots.getValueAt(this.tblSlots.getSelectedRow(), 7)).toString();
            String tblDate = (this.tblSlots.getValueAt(this.tblSlots.getSelectedRow(), 2)).toString();
            String tblTime = (this.tblSlots.getValueAt(this.tblSlots.getSelectedRow(), 3)).toString();
            Boolean blnSlotConfirmed = Boolean.valueOf((this.tblSlots.getValueAt(this.tblSlots.getSelectedRow(), 8)).toString());
            Boolean blnSlotCompleted = Boolean.valueOf((this.tblSlots.getValueAt(this.tblSlots.getSelectedRow(), 9)).toString());
            if (blnSlotConfirmed) {
                tglSlotConfirmed.setBackground(Color.green);
                tglSlotConfirmed.setText("Confirmed.");
            } else {
                tglSlotConfirmed.setBackground(Color.red);
                tglSlotConfirmed.setText("Not Confirmed Yet.");
            }
            tglSlotConfirmed.setSelected(blnSlotConfirmed);
            if (blnSlotCompleted) {
                tglSlotCompleted.setBackground(Color.cyan);
                tglSlotCompleted.setText("Completed.");
            } else {
                tglSlotCompleted.setBackground(Color.orange);
                tglSlotCompleted.setText("Not Completed Yet.");
            }
            tglSlotCompleted.setSelected(blnSlotCompleted);
            lblSlotID.setText(tblSlotsID);
            lblCandidate1.setText(tblCandidate1);
            lblCandidate2.setText(tblCandidate2);
            lblTypeOfTraining.setText(tblTypeOfTraining);
            lblInstructor1.setText(tblInstructor1);
            lblDate.setText(tblDate);
            lblTime.setText(tblTime);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Eagleplan Exception Error - tblSlotsMouseClicked: " + e);
        }
    }//GEN-LAST:event_tblSlotsMouseClicked

    private void tglExpandedPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tglExpandedPropertyChange

// TODO add your handling code here:
    }//GEN-LAST:event_tglExpandedPropertyChange

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dlgSlotHistory.setSize(600, 500);
        dlgSlotHistory.setModalityType(Dialog.ModalityType.MODELESS);
        dlgSlotHistory.setVisible(true);


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    public void MakeTable() {

        DBConnect connect = new DBConnect();

        try {
            connect.GetRS("Select s.* from slots s order by s.slot_date_time_start asc");
            connect.rs.last();
            //System.out.println("The total number of records are: " + connect.rs.getRow());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Problem: " + e);
        }

        try {
            while (connect.rs.next()) {
                String id = connect.rs.getString(1);
                String location = connect.rs.getString(3);
                String Can1 = connect.rs.getString(7);
                String Can2 = connect.rs.getString(8);

                Object[] content = {id, location, Can1, Can2};

                DefaultTableModel model = new DefaultTableModel();

                model.addRow(content);

            }
        } catch (Exception e) {

        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog dlgSlotHistory;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblAppTitle;
    private javax.swing.JLabel lblCandidate1;
    private javax.swing.JLabel lblCandidate2;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblInstructor1;
    private javax.swing.JLabel lblSlotID;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTypeOfTraining;
    private javax.swing.JMenuItem mnuShowHistory;
    private javax.swing.JPopupMenu pmnuMain;
    private javax.swing.JPanel pnlExpanded;
    private javax.swing.JPanel pnlPairings;
    private javax.swing.JPanel pnlSlots;
    private javax.swing.JTable tblPairings;
    private javax.swing.JTable tblSlots;
    private javax.swing.JToggleButton tglExpanded;
    private javax.swing.JToggleButton tglSlotCompleted;
    private javax.swing.JToggleButton tglSlotConfirmed;
    // End of variables declaration//GEN-END:variables

    private void tblSlotsCreate() {
        DBConnect connSlots = new DBConnect();
        try {
            connSlots.GetRS("select s.slot_id as 'ID', s.slot_location as 'Location', Upper(DATE_FORMAT(s.slot_date_time_start,'%d-%b-%Y')) as 'Date', "
                    + "Upper(DATE_FORMAT(s.slot_date_time_start,'%H:%m')) as 'Time',s.slot_candidate_1 as 'Candidate 1', "
                    + "s.slot_candidate_2 as 'Candidate 2', s.slot_training_type as 'Type of Training', s.slot_instructor_1 as 'Instructor', "
                    + "s.slot_confirmed as 'Confirmed', s.slot_completed as 'Completed' from slots s order by s.slot_date_time_start;");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Eagleplan Exception Error - tblSlotsCreate(): " + e);
        }
        //initComponents();
        
        
        tblSlots.setModel(DbUtils.resultSetToTableModel(connSlots.rs));
        //TableColumn column = null;

    }

    private void tblPairingsCreate() {
        DBConnect conPairings = new DBConnect();
        try {
            conPairings.GetRS("select p.pair_id as 'Pairing ID', p.slot1 as 'Slot 1 ID', p.slot2 as 'Slot 2 ID' from pairings p;");
            //conPairings.rs.last();
            //JOptionPane.showMessageDialog(null, "Total records: " + (conPairings.rs.getRow()));
            
            //TableColumn column = null;
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Eagleplan Exception Error - tblPairingsCreate(): " + e);
        }
        
        tblPairings.setModel(DbUtils.resultSetToTableModel(conPairings.rs));
        
          
          
          //TableColumn column = null;
    }

}
