package eagleplan;

//import java.awt.Color;
//import java.awt.Component;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.Toolkit;
import static java.lang.String.format;
import java.util.*;
//import java.sql.Date;
//import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Time;
import java.text.DateFormat;
//import java.sql.Statement;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
//import javax.swing.DefaultCellEditor;
//import javax.swing.JCheckBox;
//import javax.swing.JDialog;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.JTable;
//import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
//import javax.swing.table.TableCellEditor;
//import javax.swing.table.TableCellRenderer;
//import javax.swing.table.TableColumn;
//import javax.swing.table.TableColumnModel;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

//* Used: mysql-connector-java-5.1.40-bin
public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();
        this.setSize(1192, 850);
        tblSlotsCreate();
        tblSlots.setComponentPopupMenu(pmnuMain);
        //tblPairingsCreate();
        tblConfigurationCandidatesCreate();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        tblSlots.setRowSelectionInterval(0, 0);

        //tblPairings.setRowSelectionInterval(0, 0);
        //table.changeSelection(0, 0, false, false);
        //tblSlots.setColumnModel(columnModel);
        //tblSlots.setModel(DbUtils.resultSetToTableModel(connect.rs));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlgSlotHistory = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSlotHistory = new javax.swing.JTable();
        btnClose = new javax.swing.JButton();
        pmnuMain = new javax.swing.JPopupMenu();
        mnuShowHistory = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnuAddEditDelete = new javax.swing.JMenuItem();
        pnlMainPanel = new javax.swing.JTabbedPane();
        pnlSlots = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSlots = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblSlotID = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblCandidate1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblCandidate2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblTypeOfTraining = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblInstructor1 = new javax.swing.JLabel();
        tglSlotConfirmed = new javax.swing.JToggleButton();
        tglSlotCompleted = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        pnlExpanded = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblExpandedCandidate1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblExpandedCandidate2 = new javax.swing.JLabel();
        lblExpandedInstructor1 = new javax.swing.JLabel();
        lblExpandedInstructor2 = new javax.swing.JLabel();
        lblExpandedObserver1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        lblExpandedOPCLapseDate1 = new javax.swing.JLabel();
        lblExpandedOPCLapseDate2 = new javax.swing.JLabel();
        lblExpandedLPCLapseDate2 = new javax.swing.JLabel();
        lblExpandedLPCLapseDate1 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        lblExpandedSlotStart = new javax.swing.JLabel();
        lblExpandedSlotEnd = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        lblExpandedTypeOfTraining = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        lblExpandedVersion = new javax.swing.JLabel();
        btnAddEditDeleteSlots = new javax.swing.JButton();
        pnlPairings = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPairings = new javax.swing.JTable();
        pnlReports = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnrptLPCOPCLapseDates = new javax.swing.JButton();
        btnrptProvisionalPlanning = new javax.swing.JButton();
        pnlConfiguration = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JTabbedPane();
        pnlCandidates = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblConfigurationCandidates = new javax.swing.JTable();
        pnlLocation = new javax.swing.JPanel();

        dlgSlotHistory.setTitle("EaglePlan - [Version 1.0a]");
        dlgSlotHistory.setAlwaysOnTop(true);

        lblTitle.setBackground(new java.awt.Color(0, 0, 0));
        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Slot History");
        lblTitle.setFocusTraversalPolicyProvider(true);
        lblTitle.setOpaque(true);

        tblSlotHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Type", "Revision No", "Date", "Candidate 1", "Candidate 2", "Instructor 1", "Instructor 2", "Type of Training", "Version"
            }
        ));
        jScrollPane3.setViewportView(tblSlotHistory);

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1254, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnClose)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 196, Short.MAX_VALUE)
                .addComponent(btnClose)
                .addContainerGap())
        );

        javax.swing.GroupLayout dlgSlotHistoryLayout = new javax.swing.GroupLayout(dlgSlotHistory.getContentPane());
        dlgSlotHistory.getContentPane().setLayout(dlgSlotHistoryLayout);
        dlgSlotHistoryLayout.setHorizontalGroup(
            dlgSlotHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dlgSlotHistoryLayout.setVerticalGroup(
            dlgSlotHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        mnuShowHistory.setText("Show History");
        mnuShowHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuShowHistoryActionPerformed(evt);
            }
        });
        pmnuMain.add(mnuShowHistory);
        pmnuMain.add(jSeparator1);

        mnuAddEditDelete.setText("Add/Edit/Delete");
        pmnuMain.add(mnuAddEditDelete);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EaglePlan - [Version 1.0a]");
        setPreferredSize(new java.awt.Dimension(1200, 800));
        setSize(new java.awt.Dimension(1200, 800));

        pnlMainPanel.setPreferredSize(new java.awt.Dimension(1152, 862));

        pnlSlots.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        tblSlots.setAutoCreateRowSorter(true);
        tblSlots.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblSlots.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Slot ID", "A/C", "Loc", "Date", "Reg", "Time", "Can 1", "Can 2", "Type", "Ins 1", "Ins 2", "Obs 1", "Version", "Title 14", "Confmd", "Complt"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSlots.setColumnSelectionAllowed(true);
        tblSlots.setRowHeight(30);
        tblSlots.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblSlots.getTableHeader().setReorderingAllowed(false);
        tblSlots.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblSlotsMouseReleased(evt);
            }
        });
        tblSlots.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblSlotsKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblSlots);
        tblSlots.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tblSlots.getColumnModel().getColumnCount() > 0) {
            tblSlots.getColumnModel().getColumn(2).setResizable(false);
            tblSlots.getColumnModel().getColumn(3).setResizable(false);
            tblSlots.getColumnModel().getColumn(3).setPreferredWidth(150);
        }

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Details of Slot"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Slot ID:");
        jLabel1.setPreferredSize(new java.awt.Dimension(55, 22));

        lblSlotID.setBackground(new java.awt.Color(204, 255, 204));
        lblSlotID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblSlotID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlotID.setOpaque(true);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Candidate 1:");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblCandidate1.setBackground(new java.awt.Color(204, 255, 204));
        lblCandidate1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCandidate1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCandidate1.setOpaque(true);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Candidate 2:");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblCandidate2.setBackground(new java.awt.Color(204, 255, 204));
        lblCandidate2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCandidate2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCandidate2.setOpaque(true);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Type of Training:");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblTypeOfTraining.setBackground(new java.awt.Color(204, 255, 204));
        lblTypeOfTraining.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTypeOfTraining.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTypeOfTraining.setOpaque(true);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Instructor 1:");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblInstructor1.setBackground(new java.awt.Color(204, 255, 204));
        lblInstructor1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblInstructor1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInstructor1.setOpaque(true);

        tglSlotConfirmed.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tglSlotConfirmed.setText("Slot Confirmed with Provider");

        tglSlotCompleted.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tglSlotCompleted.setText("Slot Completed");
        tglSlotCompleted.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tglSlotCompletedStateChanged(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Date:");

        lblDate.setBackground(new java.awt.Color(204, 255, 204));
        lblDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDate.setToolTipText("");
        lblDate.setOpaque(true);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Time:");

        lblTime.setBackground(new java.awt.Color(204, 255, 204));
        lblTime.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime.setOpaque(true);

        pnlExpanded.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Candidate 1:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Candidate 2:");

        lblExpandedCandidate1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblExpandedCandidate1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExpandedCandidate1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Instructor 1:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Instructor 2:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Observer 1:");

        lblExpandedCandidate2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblExpandedCandidate2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExpandedCandidate2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));

        lblExpandedInstructor1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblExpandedInstructor1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExpandedInstructor1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));

        lblExpandedInstructor2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblExpandedInstructor2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExpandedInstructor2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));

        lblExpandedObserver1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblExpandedObserver1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExpandedObserver1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("OPC Lapses:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("LPC Lapses:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("OPC Lapses:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setText("LPC Lapses:");

        lblExpandedOPCLapseDate1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));

        lblExpandedOPCLapseDate2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));

        lblExpandedLPCLapseDate2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 0)));

        lblExpandedLPCLapseDate1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 0)));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("Slot End:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel19.setText("Slot Start:");

        lblExpandedSlotStart.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));

        lblExpandedSlotEnd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel20.setText("Type of Training:");

        lblExpandedTypeOfTraining.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblExpandedTypeOfTraining.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExpandedTypeOfTraining.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel21.setText("Version:");

        lblExpandedVersion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));

        javax.swing.GroupLayout pnlExpandedLayout = new javax.swing.GroupLayout(pnlExpanded);
        pnlExpanded.setLayout(pnlExpandedLayout);
        pnlExpandedLayout.setHorizontalGroup(
            pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlExpandedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlExpandedLayout.createSequentialGroup()
                        .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlExpandedLayout.createSequentialGroup()
                                .addComponent(lblExpandedObserver1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel18)
                                .addGap(37, 37, 37)
                                .addComponent(lblExpandedSlotEnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnlExpandedLayout.createSequentialGroup()
                                .addComponent(lblExpandedInstructor2, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel19)
                                .addGap(30, 30, 30)
                                .addComponent(lblExpandedSlotStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(pnlExpandedLayout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblExpandedTypeOfTraining, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addComponent(lblExpandedVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlExpandedLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblExpandedInstructor1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlExpandedLayout.createSequentialGroup()
                        .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlExpandedLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblExpandedCandidate1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlExpandedLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblExpandedCandidate2, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlExpandedLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblExpandedOPCLapseDate1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnlExpandedLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblExpandedOPCLapseDate2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblExpandedLPCLapseDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblExpandedLPCLapseDate2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        pnlExpandedLayout.setVerticalGroup(
            pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlExpandedLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblExpandedCandidate1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblExpandedLPCLapseDate1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblExpandedOPCLapseDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblExpandedCandidate2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblExpandedOPCLapseDate2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblExpandedLPCLapseDate2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblExpandedInstructor1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlExpandedLayout.createSequentialGroup()
                        .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblExpandedInstructor2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(lblExpandedObserver1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlExpandedLayout.createSequentialGroup()
                        .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(lblExpandedSlotStart, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(lblExpandedSlotEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlExpandedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(jLabel20)
                    .addComponent(lblExpandedTypeOfTraining, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblExpandedVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnAddEditDeleteSlots.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAddEditDeleteSlots.setText("Add/Edit/Delete Slots");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlExpanded, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblDate, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(lblSlotID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCandidate2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCandidate1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTypeOfTraining, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblInstructor1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tglSlotCompleted, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tglSlotConfirmed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(btnAddEditDeleteSlots, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSlotID, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(lblTypeOfTraining, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCandidate1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5)
                            .addComponent(lblInstructor1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tglSlotConfirmed, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tglSlotCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblCandidate2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnAddEditDeleteSlots, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlExpanded, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlSlotsLayout = new javax.swing.GroupLayout(pnlSlots);
        pnlSlots.setLayout(pnlSlotsLayout);
        pnlSlotsLayout.setHorizontalGroup(
            pnlSlotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSlotsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSlotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1165, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlSlotsLayout.setVerticalGroup(
            pnlSlotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSlotsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlMainPanel.addTab("Slots", pnlSlots);

        pnlPairings.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        tblPairings.setAutoCreateRowSorter(true);
        tblPairings.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblPairings.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPairings.setRowHeight(30);
        jScrollPane2.setViewportView(tblPairings);

        javax.swing.GroupLayout pnlPairingsLayout = new javax.swing.GroupLayout(pnlPairings);
        pnlPairings.setLayout(pnlPairingsLayout);
        pnlPairingsLayout.setHorizontalGroup(
            pnlPairingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPairingsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1165, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlPairingsLayout.setVerticalGroup(
            pnlPairingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPairingsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(517, Short.MAX_VALUE))
        );

        pnlMainPanel.addTab("Pairings", pnlPairings);

        pnlReports.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Generic"));

        btnrptLPCOPCLapseDates.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnrptLPCOPCLapseDates.setText("LPC/OPC Lapse Dates");
        btnrptLPCOPCLapseDates.setToolTipText("");
        btnrptLPCOPCLapseDates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrptLPCOPCLapseDatesActionPerformed(evt);
            }
        });

        btnrptProvisionalPlanning.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnrptProvisionalPlanning.setText("Provisional Planning");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnrptLPCOPCLapseDates, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnrptProvisionalPlanning, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(862, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnrptLPCOPCLapseDates)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnrptProvisionalPlanning)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlReportsLayout = new javax.swing.GroupLayout(pnlReports);
        pnlReports.setLayout(pnlReportsLayout);
        pnlReportsLayout.setHorizontalGroup(
            pnlReportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReportsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlReportsLayout.setVerticalGroup(
            pnlReportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReportsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(561, Short.MAX_VALUE))
        );

        pnlMainPanel.addTab("Reports", pnlReports);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblConfigurationCandidates.setAutoCreateRowSorter(true);
        tblConfigurationCandidates.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblConfigurationCandidates.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblConfigurationCandidates.setRowHeight(30);
        jScrollPane4.setViewportView(tblConfigurationCandidates);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1158, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 308, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlCandidatesLayout = new javax.swing.GroupLayout(pnlCandidates);
        pnlCandidates.setLayout(pnlCandidatesLayout);
        pnlCandidatesLayout.setHorizontalGroup(
            pnlCandidatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCandidatesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlCandidatesLayout.setVerticalGroup(
            pnlCandidatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCandidatesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.addTab("Candidates", pnlCandidates);

        javax.swing.GroupLayout pnlLocationLayout = new javax.swing.GroupLayout(pnlLocation);
        pnlLocation.setLayout(pnlLocationLayout);
        pnlLocationLayout.setHorizontalGroup(
            pnlLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1190, Short.MAX_VALUE)
        );
        pnlLocationLayout.setVerticalGroup(
            pnlLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 779, Short.MAX_VALUE)
        );

        jPanel5.addTab("Location/Facility", pnlLocation);

        javax.swing.GroupLayout pnlConfigurationLayout = new javax.swing.GroupLayout(pnlConfiguration);
        pnlConfiguration.setLayout(pnlConfigurationLayout);
        pnlConfigurationLayout.setHorizontalGroup(
            pnlConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        pnlConfigurationLayout.setVerticalGroup(
            pnlConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5)
        );

        pnlMainPanel.addTab("Configuration", pnlConfiguration);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 847, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnrptLPCOPCLapseDatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrptLPCOPCLapseDatesActionPerformed
        // TODO add your handling code here:
        DBConnect rptLPCOPCLapseDate = new DBConnect();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            rptLPCOPCLapseDate.DBConnect();
            //Connection con = DriverManager.getConnection("jdbc:mysql://" + strSQLHost + ":" + strSQLPort + "/" + strSQLDatabasename, strSQLUser, strSQLPassword);
            String strReportPath = "C:\\Users\\Tinus Blaauw\\Desktop\\report.jrxml";
            JasperReport jr = JasperCompileManager.compileReport(strReportPath);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, rptLPCOPCLapseDate.con);

            JasperViewer.viewReport(jp, false);

            rptLPCOPCLapseDate.con.close();

            // TODO add your handling code here:
        } catch (Exception ex) {
            //showMessageDialog(null, ex.toString());
        }

    }//GEN-LAST:event_btnrptLPCOPCLapseDatesActionPerformed

    private void tblSlotsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSlotsMouseReleased
        // TODO add your handling code here:
        ArrayList<Slot> list = getSlotsList();
        lblDate.setText(tblSlots.getValueAt(tblSlots.getSelectedRow(), 3).toString());
        lblSlotID.setText(tblSlots.getValueAt(tblSlots.getSelectedRow(), 0).toString());
        lblCandidate1.setText(tblSlots.getValueAt(tblSlots.getSelectedRow(), 6).toString());
        if (tblSlots.getValueAt(tblSlots.getSelectedRow(), 7) != null) {
            lblCandidate2.setText(tblSlots.getValueAt(tblSlots.getSelectedRow(), 7).toString());
        } else {
            lblCandidate2.setText("No Candidate");
        }
        lblTypeOfTraining.setText(tblSlots.getValueAt(tblSlots.getSelectedRow(), 8).toString());
        if (tblSlots.getValueAt(tblSlots.getSelectedRow(), 9) != null) {
            lblInstructor1.setText(tblSlots.getValueAt(tblSlots.getSelectedRow(), 9).toString());
        } else {
            lblInstructor1.setText("Not Assigned");
        };
        //String format = formats[i];

            String ResultDate;
            String ResultTime;
            SimpleDateFormat TimeFormatter;
            SimpleDateFormat DateFormatter;
            DateFormatter = new SimpleDateFormat("dd-MMM-yyyy");
            TimeFormatter = new SimpleDateFormat("HH:mm");
            Date ParsedDate = list.get(tblSlots.getSelectedRow()).getDateBegin();
            Date ParsedTime = list.get(tblSlots.getSelectedRow()).getTimeBegin();
            
            ResultDate = DateFormatter.format(ParsedDate);
            ResultTime = TimeFormatter.format(ParsedTime);
            lblDate.setText(ResultDate.toString().toUpperCase());
            lblTime.setText(ResultTime.toString());
            tglSlotCompleted.setSelected(Boolean.parseBoolean(tblSlots.getValueAt(tblSlots.getSelectedRow(),15).toString()));
            getExpanded();
    }//GEN-LAST:event_tblSlotsMouseReleased

    private void getExpanded(){
        String LC = tblSlots.getValueAt(tblSlots.getSelectedRow(), 0).toString();
        DBConnect connHistory = new DBConnect();

        try {
        String BuildSQL = "SELECT s.id AS 'slot_ID', "
                + "s.date_time_begin AS 'Date Start', "
                + "s.date_time_end AS 'Date Stop', "
                + "s.candidate_1 AS 'CAN1', "
                + "s.candidate_2 AS 'CAN2',s.instructor_1 AS 'INS1', "
                + "s.instructor_2 AS 'INS2', s.observer_1 AS 'OBS1', "
                + "s.version, c1.3lc as 'CAN1_3lc', "
                + "c1.surname as 'CAN1_Surname', "
                + "c1.short_name as 'CAN1_Short_Name',"
                + "c1.position as 'CAN1_Position', "
                + "c1.lpc_ld as 'CAN1_LPC_LD', "
                + "c1.opc_ld as 'CAN1_OPC_LD', "
                + "c2.3lc as 'CAN2_LC', "
                + "c2.surname as 'CAN2_Surname', "
                + "c2.short_name as 'CAN2_Shart_Name', "
                + "c2.position as 'CAN2_Position',"
                + "c2.lpc_ld as 'CAN2_LPC_LD', "
                + "c2.opc_ld as 'CAN2_OPC_LD', "
                + "i1.3lc as 'INS1_3LC', "
                + "i1.full_name as 'INS1_FullName'"
                + "FROM slots s, candidates c1, candidates c2, instructors i1"
                + "where s.id=9 AND s.candidate_1=c1.3lc "
                + "and s.candidate_2=c2.3lc and s.instructor_1=i1.3lc";
    
        showMessageDialog(null, BuildSQL);
            connHistory.GetRS(BuildSQL);
        }catch (SQLException e)
    {
        showMessageDialog(null, e.toString());
            }
    }
        
    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCloseActionPerformed

    private void tblSlotsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblSlotsKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tblSlotsKeyPressed

    private void tglSlotCompletedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tglSlotCompletedStateChanged
        // TODO add your handling code here:
        if (tglSlotCompleted.isSelected()) {
            tglSlotCompleted.setBackground(Color.green);
        } else {
            tglSlotCompleted.setBackground(tblSlots.getBackground());
        }
    }//GEN-LAST:event_tglSlotCompletedStateChanged

    private void mnuShowHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuShowHistoryActionPerformed
        dlgSlotHistory.setSize(1284, 468);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        dlgSlotHistory.setLocation(dim.width / 2 - dlgSlotHistory.getSize().width / 2, dim.height / 2 - dlgSlotHistory.getSize().height / 2);

        dlgSlotHistory.setModalityType(Dialog.ModalityType.MODELESS);
        dlgSlotHistory.setVisible(true);
        
    }//GEN-LAST:event_mnuShowHistoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    public void MakeTable() {

        DBConnect connect = new DBConnect();

        try {
            connect.GetRS("Select s.* from slots s order by s.slot_date_time_start asc");
            connect.rs.last();
            //System.out.println("The total number of records are: " + connect.rs.getRow());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Problem: " + e);
        }

        try {
            while (connect.rs.next()) {
                String id = connect.rs.getString(1);
                String location = connect.rs.getString(3);
                String Can1 = connect.rs.getString(7);
                String Can2 = connect.rs.getString(8);

                Object[] content = {id, location, Can1, Can2};

                DefaultTableModel model = new DefaultTableModel();

                model.addRow(content);

            }
        } catch (Exception e) {

        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddEditDeleteSlots;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnrptLPCOPCLapseDates;
    private javax.swing.JButton btnrptProvisionalPlanning;
    private javax.swing.JDialog dlgSlotHistory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lblCandidate1;
    private javax.swing.JLabel lblCandidate2;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblExpandedCandidate1;
    private javax.swing.JLabel lblExpandedCandidate2;
    private javax.swing.JLabel lblExpandedInstructor1;
    private javax.swing.JLabel lblExpandedInstructor2;
    private javax.swing.JLabel lblExpandedLPCLapseDate1;
    private javax.swing.JLabel lblExpandedLPCLapseDate2;
    private javax.swing.JLabel lblExpandedOPCLapseDate1;
    private javax.swing.JLabel lblExpandedOPCLapseDate2;
    private javax.swing.JLabel lblExpandedObserver1;
    private javax.swing.JLabel lblExpandedSlotEnd;
    private javax.swing.JLabel lblExpandedSlotStart;
    private javax.swing.JLabel lblExpandedTypeOfTraining;
    private javax.swing.JLabel lblExpandedVersion;
    private javax.swing.JLabel lblInstructor1;
    public javax.swing.JLabel lblSlotID;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTypeOfTraining;
    private javax.swing.JMenuItem mnuAddEditDelete;
    private javax.swing.JMenuItem mnuShowHistory;
    private javax.swing.JPopupMenu pmnuMain;
    private javax.swing.JPanel pnlCandidates;
    private javax.swing.JPanel pnlConfiguration;
    private javax.swing.JPanel pnlExpanded;
    private javax.swing.JPanel pnlLocation;
    private javax.swing.JTabbedPane pnlMainPanel;
    private javax.swing.JPanel pnlPairings;
    private javax.swing.JPanel pnlReports;
    private javax.swing.JPanel pnlSlots;
    private javax.swing.JTable tblConfigurationCandidates;
    private javax.swing.JTable tblPairings;
    private javax.swing.JTable tblSlotHistory;
    private javax.swing.JTable tblSlots;
    private javax.swing.JToggleButton tglSlotCompleted;
    private javax.swing.JToggleButton tglSlotConfirmed;
    // End of variables declaration//GEN-END:variables

    private void tblSlotsCreate() {
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JTextField.CENTER);
        tblSlots.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        tblSlots.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
        tblSlots.getColumnModel().getColumn(3).setCellRenderer( centerRenderer );
        tblSlots.getColumnModel().getColumn(6).setCellRenderer( centerRenderer );
        tblSlots.getColumnModel().getColumn(7).setCellRenderer( centerRenderer );
        tblSlots.getColumnModel().getColumn(9).setCellRenderer( centerRenderer );
        tblSlots.getColumnModel().getColumn(12).setCellRenderer( centerRenderer );
        SimpleDateFormat myFormat = new SimpleDateFormat("yyyy-MM-dd");
        //tblSlots.getColumnModel()
        ArrayList<Slot> list = getSlotsList();
        DefaultTableModel model = (DefaultTableModel) tblSlots.getModel();
        Object[] row = new Object[16];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getID();
            row[1] = list.get(i).getFleet();
            row[2] = list.get(i).getLocation();
            row[3] = list.get(i).getDateBegin();
            row[4] = list.get(i).getSimRegistration();
            row[5] = list.get(i).getDateEnd();
            row[6] = list.get(i).getCandidate1();
            row[7] = list.get(i).getCandidate2();
            row[8] = list.get(i).getTrainingType();
            row[9] = list.get(i).getInstructor1();
            row[10] = list.get(i).getInstructor2();
            row[11] = list.get(i).getObserver1();
            row[12] = list.get(i).getVersion();
            row[13] = list.get(i).getModifiedDate();
            row[14] = list.get(i).getConfirmed();
            row[15] = list.get(i).getCompleted();
            model.addRow(row);
            tblSlots.setColumnSelectionAllowed(false);
            TableColumn column = null;
            column = tblSlots.getColumnModel().getColumn(0);
            column.setPreferredWidth(60);
            column = tblSlots.getColumnModel().getColumn(1);
            column.setPreferredWidth(50);
            column = tblSlots.getColumnModel().getColumn(3);
            column.setPreferredWidth(120);
            column = tblSlots.getColumnModel().getColumn(2);
            column.setPreferredWidth(60);
            column = tblSlots.getColumnModel().getColumn(8);
            column.setPreferredWidth(100);
            
            

        };
        
        

        //tblSlotsSetupDateFormat();
        //TableCellRenderer tableCellRenderer = new DefaultTableCellRenderer() {
    }

    private void tblHistorySlotsCreate() {

        ArrayList<Slot> HistorySlot = getHistoryList();
        DefaultTableModel model = (DefaultTableModel) tblSlots.getModel();
        Object[] row = new Object[8];
        for (int i = 0; i < HistorySlot.size(); i++) {
            // row[0] = HistorySlot.get(i).
            row[1] = HistorySlot.get(i).getFleet();
            row[2] = HistorySlot.get(i).getLocation();

            //String reformattedStr = myFormat.format(history.get(i).getDateStart().toString());
            row[3] = HistorySlot.get(i).getDateStart().toString();
            row[4] = HistorySlot.get(i).getSimRegistration();
            row[5] = HistorySlot.get(i).getDateStop();
            row[6] = HistorySlot.get(i).getCandidate1();
            row[7] = HistorySlot.get(i).getCandidate2();
            row[8] = HistorySlot.get(i).getTrainingType();
            row[9] = HistorySlot.get(i).getInstructor1();
            row[10] = HistorySlot.get(i).getInstructor2();
            row[11] = HistorySlot.get(i).getObserver1();
            row[12] = HistorySlot.get(i).getVersion();
            row[13] = HistorySlot.get(i).getModifiedDate();
            row[14] = HistorySlot.get(i).getConfirmed();
            row[15] = HistorySlot.get(i).getCompleted();
            model.addRow(row);
            tblSlots.setColumnSelectionAllowed(false);
        };
        //tblSlotsSetupDateFormat();
        //TableCellRenderer tableCellRenderer = new DefaultTableCellRenderer() {

    }

    private void tblPairingsCreate() {
        DBConnect conPairings = new DBConnect();
        try {
            conPairings.GetRS("select p.pair_id as 'Pairing ID', p.slot1 as 'Slot 1 ID', p.slot2 as 'Slot 2 ID' from pairings p;");
            //conPairings.rs.last();
            //JOptionPane.showMessageDialog(null, "Total records: " + (conPairings.rs.getRow()));

            //TableColumn column = null;
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Eagleplan Exception Error - tblPairingsCreate(): " + e);
        }

        tblPairings.setModel(DbUtils.resultSetToTableModel(conPairings.rs));

        //TableColumn column = null;
    }

    public ArrayList<Slot> getHistoryList() {
        ArrayList<Slot> HistoryList = new ArrayList<Slot>();
        DBConnect connSlotHistory = new DBConnect();

        try {
            connSlotHistory.GetRS("Select * from slots_history where prim_key ='" + lblSlotID.getText().toString()
                    + "'order by revision DESC'");
            SlotHistory SlotHistory;
            while (connSlotHistory.rs.next()) {
                SlotHistory = new SlotHistory(connSlotHistory.rs.getString("action"),
                        connSlotHistory.rs.getInt("revision"),
                        connSlotHistory.rs.getString("dt_datetime"),
                        connSlotHistory.rs.getInt("prim_key"),
                        connSlotHistory.rs.getString("fleet"),
                        connSlotHistory.rs.getString("location"),
                        connSlotHistory.rs.getString("date_time_start"),
                        connSlotHistory.rs.getString("sim_reg"),
                        connSlotHistory.rs.getString("date_time_end"),
                        connSlotHistory.rs.getString("candidate_1"),
                        connSlotHistory.rs.getString("candidate_2"),
                        connSlotHistory.rs.getString("training_type"),
                        connSlotHistory.rs.getString("instructor_1"),
                        connSlotHistory.rs.getString("instructor_2"),
                        connSlotHistory.rs.getString("observer_1"),
                        connSlotHistory.rs.getInt("version"),
                        connSlotHistory.rs.getDate("modified_time"),
                        connSlotHistory.rs.getBoolean("confirmed"),
                        connSlotHistory.rs.getBoolean("completed"));
                //HistoryList.add(SlotHistory);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Eagleplan Exception Error - ArrayList<Slot> slotsList(): " + e);
        }
        return HistoryList;
    }

    public ArrayList<Slot> getSlotsList() {
        ArrayList<Slot> SlotsList = new ArrayList<Slot>();
        DBConnect connSlot = new DBConnect();

        try {
            connSlot.GetRS("Select * from slots");
            Slot slot;
            while (connSlot.rs.next()) {
                slot = new Slot(connSlot.rs.getInt("id"),
                        connSlot.rs.getString("fleet"),
                        connSlot.rs.getString("location"),
                        connSlot.rs.getDate("date_time_begin"),
                        connSlot.rs.getTime("date_time_begin"),
                        connSlot.rs.getString("sim_reg"),
                        connSlot.rs.getDate("date_time_end"),
                        connSlot.rs.getTime("date_time_end"),
                        connSlot.rs.getString("candidate_1"),
                        connSlot.rs.getString("candidate_2"),
                        connSlot.rs.getString("training_type"),
                        connSlot.rs.getString("instructor_1"),
                        connSlot.rs.getString("instructor_2"),
                        connSlot.rs.getString("observer_1"),
                        connSlot.rs.getInt("version"),
                        connSlot.rs.getDate("modified_time"),
                        connSlot.rs.getBoolean("confirmed"),
                        connSlot.rs.getBoolean("completed"));
                SlotsList.add(slot);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Eagleplan Exception Error - ArrayList<Slot> slotsList(): " + e);
        }
        return SlotsList;
    }

    private void tblConfigurationCandidatesCreate() {
        DBConnect conConfCandidates = new DBConnect();
        try {
            conConfCandidates.GetRS("select * from view_configuration_candidates;");
            //conPairings.rs.last();
            //JOptionPane.showMessageDialog(null, "Total records: " + (conPairings.rs.getRow()));

            //TableColumn column = null;
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Eagleplan Exception Error - tblConfigurationCandidatesCreate(): " + e);
        }

        tblConfigurationCandidates.setModel(DbUtils.resultSetToTableModel(conConfCandidates.rs));

        //TableColumn column = null;
    }
}
